<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>Coursework-on-Software-Engineering</groupId>
	<artifactId>Coursework-on-Software-Engineering</artifactId>
	<version>0.1-SNAPSHOT</version>

	<!-- Один из способов устранить ошибку незапуска тестов Hunspell(TestNormalizer) 
		из-под Maven "UTF-8 encoding error. Missing continuation byte in 0. character 
		position:" "асептический" "This UTF-8 encoding can't convert to UTF-16:" 
		"асептический" - сделать проект системно-зависимым, т. е. закомментировать 
		кодировку UTF-8 : -->
	<properties>
		<jdkVersion>1.6</jdkVersion>
		<mainClass>gui.MainWindow</mainClass>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd--HH-mm</maven.build.timestamp.format>
		<jarname>${project.artifactId}-${lane}--${timestamp}</jarname>
		<standalonejarname>${jarname}-standalone</standalonejarname>
		<exeFileName>${standalonejarname}</exeFileName>
		<product.year>2014</product.year>
		<dictFolder>resources</dictFolder>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.atlascopco</groupId>
			<artifactId>hunspell-bridj</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<!-- координаты необходимой библиотеки -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<!-- эта библиотека используется только для запуска и компилирования тестов -->
			<scope>test</scope>
		</dependency>

	</dependencies>

	<repositories>
		<!-- Добавляем сторонний репозиторий, содержащий SWT, т. к. в репозитории 
			по умолчанию этого зла нет :) -->
		<repository>
			<id>swt-repo</id>
			<url>https://swt-repo.googlecode.com/svn/repo/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<!-- Репозиторий maven-download-plugin -->
		<pluginRepository>
			<id>sonatype-public-repository</id>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<!--resources> <resource> <directory>resources</directory> </resource> 
			</resources -->

		<finalName>${jarname}</finalName>

		<!-- Приказываем одной странной подсистеме m2e не мешать исполнению плагина 
			maven-download-plugin во время фазы generate-resources, подробнее: http://wiki.eclipse.org/M2E_plugin_execution_not_covered#ignore_plugin_goal -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.googlecode.maven-download-plugin</groupId>
										<artifactId>maven-download-plugin</artifactId>
										<versionRange>[1.1.0,)</versionRange>
										<goals>
											<goal>wget</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${jdkVersion}</source>
					<target>${jdkVersion}</target>
				</configuration>
			</plugin>

			<!-- Скачиваем русский словарь с помощью maven-download-plugin https://github.com/maven-download-plugin/maven-download-plugin 
				Страницы словаря в интернетах: https://sites.google.com/site/dictru/ http://code.google.com/p/hunspell-ru/ -->
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>maven-download-plugin</artifactId>
				<version>1.1.0</version>
				<executions>
					<execution>
						<id>install-hunspell-ru</id>
						<!--phase>pre-integration-test</phase -->
						<phase>generate-resources</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://bitbucket.org/Shaman_Alex/russian-dictionary-hunspell/downloads/ru_RU_UTF-8_20131101.zip</url>
							<unpack>true</unpack>
							<outputDirectory>${dictFolder}</outputDirectory>
							<md5>6c1307dd71fc3edf3c1d9c3510b6211c</md5>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${dictFolder}</directory>
							<includes>
								<include>**/*.*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- Собирает standalone-jar, содержащий все зависимости -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>${basedir}/assembly2.xml</descriptor>
					</descriptors>
					<archive>
						<manifest>
							<mainClass>${mainClass}</mainClass>
						</manifest>
					</archive>

					<!-- Не раскомментировать при создании своих assembly-descriptor-файлов -->
					<!--descriptorRefs> <descriptorRef>megajar</descriptorRef> </descriptorRefs -->
				</configuration>
			</plugin>

			<!-- Создаёт исполняемый файл из jar (который собирается assembly-plugin'ом) -->
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<id>l4j-clui</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<headerType>gui</headerType>
							<outfile>target/${exeFileName}.exe</outfile>
							<jar>target/${standalonejarname}.jar</jar>
							<errTitle>${product.title}</errTitle>
							<icon>exeicon.ico</icon>
							<classPath>
								<mainClass>${mainClass}</mainClass>
								<!-- Зависимости уже собрал assembly-plugin -->
								<addDependencies>false</addDependencies>
								<preCp>anything</preCp>
							</classPath>
							<jre>
								<minVersion>${jdkVersion}.0</minVersion>
							</jre>
							<versionInfo>
								<fileVersion>0.0.0.0</fileVersion>
								<txtFileVersion>${project.version}</txtFileVersion>
								<!-- Или из-за длины поля fileDescription, или из-за разрыва строки на две
								получалась ошибка Exec Failed ... windres -->
								<fileDescription>Texts rubricator</fileDescription>
								<copyright>Copyright ©${product.year} Konev Nikita Corp</copyright>
								<productVersion>0.0.0.0</productVersion>
								<txtProductVersion>0.0.0.0</txtProductVersion>
								<companyName>Konev Nikita Corp</companyName>
								<productName>Rubricator</productName>
								<internalName>${project.artifactId}</internalName>
								<originalFilename>${project.artifactId}.exe</originalFilename>
							</versionInfo>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Запрещаем работу maven-jar-plugin, т. к. он создаёт левые jar http://stackoverflow.com/questions/2188746/what-is-the-best-way-to-avoid-maven-jar -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<!--version>2.3.2</version -->
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>never</phase>
						<configuration>
							<finalName>unwanted</finalName>
							<classifier>unwanted</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Также запрещаем maven-deploy-plugin -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<!--version>2.7</version -->
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>never</phase>
						<configuration>
							<finalName>unwanted</finalName>
							<classifier>unwanted</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Также запрещаем maven-install-plugin -->
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<!--version>2.3.1</version -->
				<executions>
					<execution>
						<id>default-install</id>
						<phase>never</phase>
						<configuration>
							<finalName>unwanted</finalName>
							<classifier>unwanted</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Здесь с помощью maven-wagon-plugin мы отправляем наш билд на ftp. 
				В файле settings.xml нужно указать ftp-сервер с id ftp-repository, а также 
				логин и пароль, подробнее : http://maven.apache.org/plugins/maven-deploy-plugin/examples/deploy-ftp.html -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0-beta-4</version>
				<executions>
					<execution>
						<id>upload-build</id>
						<phase>install</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}</fromDir>
							<!--url >ftp://ftp-repository/public_html</url -->
							<includes>*win32*.exe,*win64*.exe,*.jar</includes>
							<excludes>pom.xml</excludes>
							<url>ftp://185.28.20.38/public_html</url>
							<serverId>ftp-repository</serverId>
							<!-- <toDir>${maven.build.timestamp}</toDir> -->
							<!-- <toDir>latest</toDir> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			 <plugin>
			   <groupId>org.apache.maven.plugins</groupId>
			   <artifactId>maven-release-plugin</artifactId>
			   <configuration>
			      <!-- <tagBase>svn://svn.zoo.com/zoo/tags</tagBase>
			      <branchBase>svn://svn.zoo.com/zoo/branches</branchBase> -->
			      <preparationGoals>clean install</preparationGoals>
			      <goals>deploy</goals>
			      <autoVersionSubmodules>true</autoVersionSubmodules>
			   </configuration>
			</plugin>

		</plugins>

		<extensions>
			<!-- Enabling the use of FTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>1.0-beta-6</version>
			</extension>
		</extensions>
	</build>

	<!-- В связи с системо-зависимостью SWT необходимо создать профили для каждой 
		системы -->
	<profiles>
		<profile>
			<id>winprofile32</id>
			<activation>
				<os>
					<family>Windows</family>
					<arch>x86</arch>
				</os>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.eclipse.swt</groupId>
					<artifactId>org.eclipse.swt.win32.win32.x86</artifactId>
					<version>4.3</version>
				</dependency>
			</dependencies>
			<properties>
				<lane>win32</lane>
			</properties>
		</profile>
		<profile>
			<id>winprofile64</id>
			<activation>
				<os>
					<family>Windows</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.eclipse.swt</groupId>
					<artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
					<version>4.3</version>
				</dependency>
			</dependencies>
			<properties>
				<lane>win64</lane>
			</properties>
		</profile>
		<profile>
			<id>linuxprofile32</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>x86</arch>
				</os>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.eclipse.swt</groupId>
					<artifactId>org.eclipse.swt.gtk.linux.x86</artifactId>
					<version>4.3</version>
				</dependency>
			</dependencies>
			<properties>
				<lane>linux32</lane>
			</properties>
		</profile>
		<profile>
			<id>linuxprofile64</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.eclipse.swt</groupId>
					<artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
					<version>4.3</version>
				</dependency>
			</dependencies>
			<properties>
				<lane>linux64</lane>
			</properties>
		</profile>
	</profiles>
	
	<scm>
		<connection>scm:git:https://github.com/nikit-cpp/Coursework-on-Software-Engineering.git</connection>
		<url>https://github.com/nikit-cpp/Coursework-on-Software-Engineering.git</url>
	</scm>
</project>
